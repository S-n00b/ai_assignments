name: Test Suite

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: "0 2 * * *" # Run daily at 2 AM

env:
  PYTHON_VERSION: "3.10"

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          pytest tests/unit/ \
            -v \
            --cov=. \
            --cov-report=xml \
            --cov-report=html \
            --cov-report=term-missing \
            --junitxml=unit-test-results.xml \
            --tb=short \
            --maxfail=5

      - name: Upload unit test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: unit-test-results-${{ matrix.python-version }}
          path: |
            unit-test-results.xml
            coverage.xml
            htmlcov/

  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run integration tests
        run: |
          pytest tests/integration/ \
            -v \
            --junitxml=integration-test-results.xml \
            --tb=short \
            --maxfail=3

      - name: Upload integration test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: integration-test-results
          path: integration-test-results.xml

  e2e-tests:
    runs-on: ubuntu-latest
    needs: integration-tests
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run end-to-end tests
        run: |
          pytest tests/e2e/ \
            -v \
            --junitxml=e2e-test-results.xml \
            --tb=short \
            --maxfail=2 \
            --timeout=600

      - name: Upload e2e test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-test-results
          path: e2e-test-results.xml

  performance-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run performance tests
        run: |
          pytest tests/unit/ \
            -v \
            --benchmark-only \
            --benchmark-save=performance-baseline \
            --benchmark-sort=mean \
            --benchmark-histogram=performance-histogram

      - name: Upload performance results
        uses: actions/upload-artifact@v3
        with:
          name: performance-results
          path: |
            .benchmarks/
            performance-histogram/

  test-report:
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests]
    if: always()

    steps:
      - uses: actions/checkout@v4

      - name: Download all test results
        uses: actions/download-artifact@v3
        with:
          path: test-results/

      - name: Generate test report
        run: |
          echo "# Test Results Summary" > test-report.md
          echo "" >> test-report.md
          echo "## Unit Tests" >> test-report.md
          echo "- Status: ${{ needs.unit-tests.result }}" >> test-report.md
          echo "" >> test-report.md
          echo "## Integration Tests" >> test-report.md
          echo "- Status: ${{ needs.integration-tests.result }}" >> test-report.md
          echo "" >> test-report.md
          echo "## End-to-End Tests" >> test-report.md
          echo "- Status: ${{ needs.e2e-tests.result }}" >> test-report.md
          echo "" >> test-report.md
          echo "## Performance Tests" >> test-report.md
          echo "- Status: ${{ needs.performance-tests.result }}" >> test-report.md

      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test-report.md
